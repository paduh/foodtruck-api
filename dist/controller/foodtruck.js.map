{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","lat","long","save","err","send","json","message","get","find","foodtrucks","findById","params","id","foodtruck","put","foodTruck","delete","status","remove","_id","review","newReview","title","text","reviews","push","newReport","report","reports"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport FoodTruck from '../model/foodtruck';\nimport Review from '../model/review'\nimport Report from '../model/report'\n\nimport { authenticate } from '../middleware/authMiddleware'\n\nexport default({ config, db }) => {\nlet api = Router();\n\n  // '/v1/restaurant/add'\n  api.post('/add', authenticate, (req, res) => {\n    let newFoodTruck = new FoodTruck();\n    newFoodTruck.name = req.body.name;\n    newFoodTruck.foodtype = req.body.foodtype;\n    newFoodTruck.avgcost = req.body.avgcost\n    newFoodTruck.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n    newFoodTruck.geometry.coordinates.long = req.body.geometry.coordinates.long;\n\n    newFoodTruck.save(err => {\n      if(err) {\n        res.send(err)\n        }\n        res.json({message: 'FoodTruck saved successfully'});\n    });\n  });\n\n  // '/V1/restaurant'- read\n  api.get('/', (req, res) => {\n    FoodTruck.find({}, (err, foodtrucks) => {\n      if (err){\n        res.send(err)\n      }\n      res.json(foodtrucks);\n    });\n  });\n\n// '/v1/restaurant/:id'- Read 1\n  api.get('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err){\n        res.send(err);\n      }\n      res.json(foodtruck);\n    });\n  });\n\n  // 'v1/restaurant/:id' - Update\n    api.put('/:id', authenticate,  (req, res) => {\n      FoodTruck.findById(req.params.id, (err, foodtruck) => {\n        if (err){\n          res.send(err);\n        }\n        foodTruck.name = req.body.name;\n        newFoodTruck.foodtype = req.body.foodtype;\n        newFoodTruck.avgcost = req.body.avgcost\n        newFoodTruck.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n        newFoodTruck.geometry.coordinates.long = req.body.geometry.coordinates.long;\n        foodTruck.save(err => {\n          if (err) {\n            res.send(err);\n          }\n            res.json({message: \"FoodTruck info updated\"});\n        });\n      });\n    });\n\n    // '/v1/restaurant/:id' - Delete\n     api.delete('/:id', (req, res) => {\n       foodtruck.findById(req.params.id, (err, foodtruck) => {\n         if (err) {\n           res.status(500).send(err);\n           return;\n         }\n         if (foodtruck === null) {\n           res.status(404).send(\"FoodTruck not found\");\n           return;\n         }\n         FoodTruck.remove({\n           _id: req.params.id\n         }, (err, foodtruck) =>{\n           if (err) {\n             res.status(500).send(err);\n             return;\n           }\n           Review.remove({\n             foodtruck: req.params.id\n           }), (err, review) => {\n             if (err) {\n               res.status(500).send(err);\n               return;\n             }\n           }\n           res.json({message: \"FoodTruck successfully remoned\"});\n         });\n       });\n     });\n\n\n    // Add review for a specific food truck Id\n    // 'v1/foodtruck/reviews/add/:id'\n\n    api.post('/reviews/add/:id', authenticate, (req, res) => {\n      FoodTruck.findById(req.params.id, (err, foodtruck) => {\n        if(err) {\n          res.send(err)\n        }\n        let newReview = new Review();\n\n        newReview.title = req.body.title;\n        newReview.text = req.body.text;\n        newReview.foodtruck = foodtruck._id\n\n        newReview.save((err, review) => {\n          if (err) {\n            res.send(err)\n          }\n          foodtruck.reviews.push(newReview);\n          foodtruck.save(err  => {\n            if (err) {\n              res.send(err)\n            }\n            res.json({ message: \" FoodTruck review saved successfully\"});\n          });\n        });\n      });\n    });\n\n\n    // retrieve all reviews for a specific food truck id\n    // '/v1/foodtruck/reviews/:id'\n    api.get('/reviews/:id', (req, res) => {\n      Review.find({foodtruck: req.params.id}, (err, reviews) => {\n        if (err) {\n          res.send(err);\n        }\n        res.json(reviews);\n      });\n    });\n\n    //Post new report flag by user for a FoodTruck\n    api.post('/report/add/:id', (req, res) => {\n      FoodTruck.findById(req.params.id, (err, foodtruck) => {\n        if (err) {\n          res.send(err)\n        }\n        let newReport = new Report();\n\n        newReport.title = req.body.title;\n        newReport.foodtruck = foodtruck._id;\n\n        newReport.save((err, report) => {\n          if (err) {\n            res.send(err)\n          }\n          foodtruck,reports.push(newReport);\n          foodtruck.save(err => {\n            if (err) {\n              res.send(err)\n            }\n            res.json({ message: \" FoodTruck report saved successfully\"});\n          });\n        });\n      });\n    });\n  \n  return api;\n}\n"]}