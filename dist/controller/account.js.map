{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","get","req","res","status","send","user","post","register","username","body","email","password","err","account","authenticate","session","scope","logut","json"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;kBAEe,gBAAmB;AAAA,MAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,MAARC,EAAQ,QAARA,EAAQ;;AAChC,MAAIC,MAAM,sBAAV;;AAEI;AACFA,MAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BA,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,MAAMJ,IAAII,IAAZ,EAArB;AACC,GAFD;;AAIA;AACAN,MAAIO,IAAJ,CAAS,WAAT,EAAsB,UAACL,GAAD,EAAMC,GAAN,EAAc;AAClC,sBAAQK,QAAR,CAAiB,sBAAY;AAC3BC,gBAAUP,IAAIQ,IAAJ,CAASC;AADQ,KAAZ,CAAjB,EAEIT,IAAIQ,IAAJ,CAASE,QAFb,EAEuB,UAASC,GAAT,EAAcC,OAAd,EAAuB;AAC5C,UAAGD,GAAH,EAAO;AACH,eAAOV,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sBAAsBQ,GAA3C,CAAP;AACH;AACD,yBAASE,YAAT,CACE,OADF,EACW;AACPC,iBAAS;AADF,OADX,EAGKd,GAHL,EAGUC,GAHV,EAGe,YAAM;AACjBA,YAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kCAArB;AACD,OALH;AAMD,KAZD;AAaD,GAdD;;AAgBF;AACAL,MAAIO,IAAJ,CAAS,QAAT,EAAmB,mBAASQ,YAAT,CACjB,OADiB,EACR;AACPC,aAAS,KADF;AAEPC,WAAO;AAFA,GADQ,CAAnB;;AAMA;;AAEAjB,MAAIC,GAAJ,CAAQ,SAAR,gCAAiC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7CA,QAAIe,KAAJ;AACAf,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oBAArB;AACD,GAHD;;AAKAL,MAAIC,GAAJ,CAAQ,KAAR,gCAA6B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzCA,QAAIC,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqBjB,IAAII,IAAzB;AACD,GAFD;;AAMA,SAAON,GAAP;AACD,C","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\nimport  { Router } from 'express';\nimport Account from '../model/account';\nimport bodyParser from 'body-parser';\nimport config from '../config';\nimport passport from 'passport';\n\n\nimport { generateAccessToken, respond, authenticate } from '../middleware/authMiddleware';\n\nexport default ({ config, db}) => {\n  let api = Router();\n\n      // '/v1/account'\n    api.get('/', (req, res) => {\n    res.status(200).send({ user: req.user });\n    });\n\n    // 'v1/account/register\n    api.post('/register', (req, res) => {\n      Account.register(new Account({\n        username: req.body.email\n      }), req.body.password, function(err, account) {\n        if(err){\n            return res.status(500).send('An error occured:' + err);\n        }\n        passport.authenticate(\n          'local', {\n            session: false\n          })(req, res, () => {\n            res.status(200).send('Successfully created new account');\n          });\n      });\n    });\n\n  //'v1/account/login'\n  api.post('/login', passport.authenticate(\n    'local', {\n      session: false,\n      scope: []\n    }), generateAccessToken, respond);\n\n  //'v1/account/logout'\n\n  api.get('/logout', authenticate, (req, res) => {\n    res.logut();\n    res.status(200).send(\"Successfully logut\");\n  });\n\n  api.get('/me', authenticate, (req, res) => {\n    res.status(200).json(req.user);\n  });\n\n\n\n  return api;\n}\n"]}